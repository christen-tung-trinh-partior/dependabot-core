/* Vulnerability auditor for npm
 *
 * Inputs:
 *  - directory containing a package.json and a package-lock.json
 *  - security advisories to audit for,
 *      [{"dependency_name": string, "affected_versions": [string]}]
 *
 * Outputs:
 *  - A report of vulnerable dependencies
 */

const Arborist = require("@npmcli/arborist");
const nock = require('nock')

// TODO: we observed when we passed several vuln ranges to the bulk endpoint,
// one range that was below installed version and two above it, the response
// indicated no vulns. Why? Do we need to filter out vuln ranges that don't
// include the installed version before passing them to this function?
async function findVulnerableDependencies(directory, advisoriesStr) {
  const advisories = JSON.parse(advisoriesStr)
  const arb = new Arborist({
    path: directory,
    auditRegistry: 'http://localhost:9999'
  });

  const scope = nock('http://localhost:9999')
    .post("/-/npm/v1/security/advisories/bulk")
    .reply(200, convertAdvisoriesToRegistryBulkFormat(advisories))

  if (!nock.isActive()) {
    nock.activate()
  }

  return await arb.audit().then(report => {
    // TODO: any adjustments to output?
    return report
  }).finally(() => {
    // TODO: is this correct cleanup?
    nock.cleanAll()
    nock.restore()
  })
}

function convertAdvisoriesToRegistryBulkFormat(advisories) {
  return advisories.reduce((formattedAdvisories, advisory) => {
    if (!formattedAdvisories[advisory.dependency_name]) {
      formattedAdvisories[advisory.dependency_name] = []
    }
    let formattedVersions =
      advisory.affected_versions.reduce((memo, version) => {
        memo.push({ vulnerable_versions: version })
        return memo
      }, [])
    formattedAdvisories[advisory.dependency_name].push(...formattedVersions)
    return formattedAdvisories
  }, {})
}

module.exports = { findVulnerableDependencies };

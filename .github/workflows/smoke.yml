# Runs all ecosystems cached and concurrently.
name: Smoke

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - docs/**
      - README.md
env:
  GH_TOKEN: ${{ secrets.E2E_PAT }}
jobs:
  e2e:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        suite:
          - actions
          - bundler
          - cargo
          - composer
          - docker
          - elm
          - go
          - gradle
          - hex
          - maven
          - npm
          - nuget
          - pip
          - pip-compile
          - pipenv
          - poetry
          - pub
          - submodules
          - terraform
    steps:
    - uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          actions:
            - Dockerfile
            - 'common/**'
            - 'github_actions/**'
          bundler:
            - Dockerfile
            - 'common/**'
            - 'bundler/**'
          cargo:
            - Dockerfile
            - 'common/**'
            - 'cargo/**'
          common:
            - Dockerfile
            - 'common/**'
          composer:
            - Dockerfile
            - 'common/**'
            - 'composer/**'
          docker:
            - Dockerfile
            - 'common/**'
            - 'docker/**'
          elm:
            - Dockerfile
            - 'common/**'
            - 'elm/**'
          go:
            - Dockerfile
            - 'common/**'
            - 'go_modules/**'
          gradle:
            - Dockerfile
            - 'common/**'
            - 'gradle/**'
          hex:
            - Dockerfile
            - 'common/**'
            - 'hex/**'
          maven:
            - Dockerfile
            - 'common/**'
            - 'maven/**'
          npm:
            - Dockerfile
            - 'common/**'
            - 'npm_and_yarn/**'
          nuget:
            - Dockerfile
            - 'common/**'
            - 'nuget/**'
          omnibus:
            - Dockerfile
            - 'common/**'
            - 'omnibus/**'
          pub:
            - Dockerfile
            - 'common/**'
            - 'pub/**'
          pip:
            - Dockerfile
            - 'common/**'
            - 'python/**'
          'pip-compile':
            - Dockerfile
            - 'common/**'
            - 'python/**'
          pipenv:
            - Dockerfile
            - 'common/**'
            - 'python/**'
          poetry:
            - Dockerfile
            - 'common/**'
            - 'python/**'
          submodules:
            - Dockerfile
            - 'common/**'
            - 'git_submodules/**'
          terraform:
            - Dockerfile
            - 'common/**'
            - 'terraform/**'

    - uses: actions/checkout@v3
      if: steps.changes.outputs[matrix.suite] == 'true'

    - name: Download CLI and test
      if: steps.changes.outputs[matrix.suite] == 'true'
      run: |
        gh release download --repo dependabot/cli -p "*linux-amd64.tar.gz"
        tar xzvf *.tar.gz >/dev/null 2>&1
        ./dependabot --version
        URL=https://api.github.com/repos/dependabot/cli/contents/testdata/smoke-${{ matrix.suite }}.yaml
        curl $(gh api $URL --jq .download_url) -o smoke.yaml

    # Download the Proxy cache. The job is ideally 100% cached so no real calls are made.
    - name: Download cache
      if: steps.changes.outputs[matrix.suite] == 'true'
      run: |
        mkdir cache
        cd cache
        gh run download --repo dependabot/cli --name cache-${{ matrix.suite }}

    - name: Build dependabot-core image
      if: steps.changes.outputs[matrix.suite] == 'true'
      env:
        DOCKER_BUILDKIT: 1
      run: |
        docker build \
          -t "dependabot/dependabot-core:latest" \
          --build-arg BUILDKIT_INLINE_CACHE=1 \
          --cache-from ghcr.io/dependabot/dependabot-core \
          .
    - name: Build dependabot-updater image
      if: steps.changes.outputs[matrix.suite] == 'true'
      env:
        DOCKER_BUILDKIT: 1
        OMNIBUS_VERSION: latest
      run: |
        docker build \
          -t "dependabot/updater:latest" \
          --build-arg BUILDKIT_INLINE_CACHE=1 \
          --cache-from ghcr.io/dependabot/dependabot-core \
          --cache-from ghcr.io/dependabot/dependabot-updater/dependabot-updater \
          --build-arg OMNIBUS_VERSION=$OMNIBUS_VERSION \
          -f Dockerfile.updater \
          .

    - name: ${{ matrix.suite }}
      if: steps.changes.outputs[matrix.suite] == 'true'
      env:
        LOCAL_GITHUB_ACCESS_TOKEN: ${{ secrets.E2E_PAT }}
      run: |
        set -o pipefail
        ./dependabot test -f=smoke.yaml -o=result.yaml --cache=cache --timeout=20m --updater-image=dependabot/updater:latest 2>&1 | tee -a log.txt

    - name: Diff
      if: always()
      continue-on-error: true
      run: diff --ignore-space-change smoke.yaml result.yaml && echo "Contents are identical"

    - name: Create summary
      if: steps.changes.outputs[matrix.suite] == 'true'
      run: tail -n100 log.txt | grep -P '\d+/\d+ calls cached \(\d+%\)' >> $GITHUB_STEP_SUMMARY

    # No upload at the end:
    # - If a test is uncachable in some regard, the cache would grow unbound.
    # - We might want to consider erroring if the cache is changed.
